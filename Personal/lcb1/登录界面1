这是我进iOS写的第一个UI（工大助手登录界面）
 button.layer.cornerRadius = value*42
        view.addSubview(button)
        
        let label = UILabel()
        label.frame = CGRect(x: 0, y: value*1112, width: value*550, height: value*30)
        label.text = "                    密码默认为身份证后六位 "
        label.textColor = UIColor.withHex(hexString: "#cacaca")
        label.font = UIFont.systemFont(ofSize: value*26)
        view.addSubview(label)
        
        let label1 = UILabel()
        label1.frame = CGRect(x: value*434, y: value*1127, width: value*200, height: value*20)
        label1.text = "—————"
        label1.textColor = UIColor.withHex(hexString: "#8f8f8f")
        label1.font = UIFont.systemFont(ofSize: value*26)
        view.addSubview(label1)
        
        let button1 = UIButton(type : .system)
        button1.frame = CGRect(x: value*400, y: value*1110, width: value*200,height: value*30)
        button1.setTitle("忘记密码？", for: .normal)
        button1.setTitleColor(.withHex(hexString: "#8f8f8f"), for: .normal)
        button1.titleLabel?.font = UIFont.systemFont(ofSize: value*26)
        view.addSubview(button1)
        
        let imag2 = UIImageView(image:(UIImage(named: "password")))
        imag2.frame = CGRect(x: (view.frame.size.width-value*490)/2, y: value*800, width: value*32, height: value*32)
        view.addSubview(imag2)
        
        let imag3 = UIImageView(image:(UIImage(named: "user-mini")))
        imag3.frame = CGRect(x: (view.frame.size.width-value*490)/2, y: value*677, width: value*32, height: value*32)
        view.addSubview(imag3)
    }
    
}

extension UIColor {
    /**
     获取颜色，通过16进制色值字符串，e.g. #ff0000， ff0000
     - parameter hexString  : 16进制字符串
     - parameter alpha      : 透明度，默认为1，不透明
     - returns: RGB
     */
    static func withHex(hexString hex: String, alpha:CGFloat = 1) -> UIColor {
        // 去除空格等
        var cString: String = hex.trimmingCharacters(in: NSCharacterSet.whitespacesAndNewlines).uppercased()
        // 去除#
        if (cString.hasPrefix("#")) {
            cString = (cString as NSString).substring(from: 1)
        }
        // 必须为6位
        if (cString.characters.count != 6) {
            return UIColor.gray
        }
        // 红色的色值
        let rString = (cString as NSString).substring(to: 2)
        let gString = ((cString as NSString).substring(from: 2) as NSString).substring(to: 2)
        let bString = ((cString as NSString).substring(from: 4) as NSString).substring(to: 2)
        // 字符串转换
        var r:CUnsignedInt = 0, g:CUnsignedInt = 0, b:CUnsignedInt = 0
        Scanner(string: rString).scanHexInt32(&r)
        Scanner(string: gString).scanHexInt32(&g)
        Scanner(string: bString).scanHexInt32(&b)
        
        return UIColor(red: CGFloat(r) / 255.0, green: CGFloat(g) / 255.0, blue: CGFloat(b) / 255.0, alpha: alpha)
    }
    
    /**
     获取颜色，通过16进制数值
     - parameter hexInt : 16进制数值
     - parameter alpha  : 透明度
     - returns : 颜色
     */
    static func withHex(hexInt hex:Int32, alpha:CGFloat = 1) -> UIColor {
        let r = CGFloat((hex & 0xff0000) >> 16) / 255
        let g = CGFloat((hex & 0xff00) >> 8) / 255
        let b = CGFloat(hex & 0xff) / 255
        return UIColor(red: r, green: g, blue: b, alpha: alpha)
    }
    
    /**
     获取颜色，通过rgb
     - parameter red    : 红色
     - parameter green  : 绿色
     - parameter blue   : 蓝色
     - returns : 颜色
     */
    static func withRGB(_ red:CGFloat, _ green:CGFloat, _ blue:CGFloat) -> UIColor {
        return UIColor.withRGBA(red, green, blue, 1)
    }
    
    /**
     获取颜色，通过rgb
     - parameter red    : 红色
     - parameter green  : 绿色
     - parameter blue   : 蓝色
     - parameter alpha  : 透明度
     - returns : 颜色
     */
    static func withRGBA(_ red:CGFloat, _ green:CGFloat, _ blue:CGFloat, _ alpha:CGFloat) -> UIColor {
        return UIColor(red: red / 255, green: green / 255, blue: blue / 255, alpha: alpha)
    }
}
