//  Created by adong666666 on 2018/7/17. Copyright © 2018年 adong666666. All rights reserved.
// 这些或许是对这句话最为美好的诠释
import UIKit
import TwicketSegmentedControl
import Appz

class SmallButton: UIButton {
    override init(frame: CGRect) {
        super.init(frame: frame)
        self.setTitleColor(UIColor.black, for: UIControlState())
        self.setTitleColor(UIColor.black, for: UIControlState())
        let imageSize:CGSize = self.imageView!.frame.size
        let titleSize:CGSize = self.titleLabel!.frame.size
        self.frame = CGRect(x: 40.fitScreen, y: 470.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
        self.titleEdgeInsets = UIEdgeInsets(top: 0, left: -imageSize.width , bottom: -imageSize.height - 50, right: 0)
        self.imageEdgeInsets = UIEdgeInsets(top: -titleSize.height - 5, left: 0, bottom: 0, right: -titleSize.width)
        self.titleLabel?.font = UIFont(name: "#404040", size: 0.1)
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}
class SmallLabel: UILabel {
    override init(frame: CGRect) {
        super.init(frame: frame)
        self.shadowColor = UIColor.lightGray
        self.shadowOffset = CGSize(width: 1, height: 1)
        self.textAlignment = NSTextAlignment.center
        self.textColor = UIColor.black
        self.backgroundColor = UIColor.clear
        self.alpha = 0.8
        self.font = UIFont (name: "Arial", size: 12)
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}
class PatientInfoCustomLabel: SmallLabel {
    override func awakeFromNib() {
        super.awakeFromNib()
    }
    override func textRect(forBounds bounds: CGRect, limitedToNumberOfLines numberOfLines: Int) -> CGRect {
        var textRect = super.textRect(forBounds: bounds, limitedToNumberOfLines: numberOfLines)
        textRect.origin.y = bounds.origin.y
        return textRect
    }
    override func drawText(in rect: CGRect) {
        let actualRect = self.textRect(forBounds: rect, limitedToNumberOfLines: self.numberOfLines)
        super.drawText(in: actualRect)
    }
}

class baseViewController: UIViewController, TwicketSegmentedControlDelegate{
    var btn: PowerButton = {
        let bt1 = PowerButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 0.fitScreen, y: 35.fitHeight, width: 20.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "返回"), for: UIControlState())
        bt1.setTitle(" ", for: UIControlState())
        bt1.setTitleColor(UIColor.white, for: UIControlState())
        bt1.addTarget(self, action: #selector(baseViewController.buttonTap(_:)), for: UIControlEvents.touchUpInside)
        return bt1
    }()
    var btn1: PowerButton = {
        let bt1 = PowerButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 300.fitScreen, y: 35.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "收藏1"), for: UIControlState())
        bt1.setTitle(" ", for: UIControlState())
        bt1.setTitleColor(UIColor.white, for: UIControlState())
        bt1.addTarget(self, action: #selector(baseViewController.buttonTap2(_:)), for: UIControlEvents.touchUpInside)
        return bt1
    }()
    var btn2: PowerButton = {
        let bt1 = PowerButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 300.fitScreen, y: 35.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "收藏2"), for: UIControlState())
        bt1.setTitle(" ", for: UIControlState())
        bt1.setTitleColor(UIColor.white, for: UIControlState())
        bt1.addTarget(self, action: #selector(baseViewController.buttonTap2(_:)), for: UIControlEvents.touchUpInside)
        return bt1
    }()
    var btn3: PowerButton = {
        let bt1 = PowerButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 360.fitScreen, y: 35.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "分享黑"), for: UIControlState())
        bt1.setTitle(" ", for: UIControlState())
        bt1.setTitleColor(UIColor.white, for: UIControlState())
        bt1.addTarget(self, action: #selector(baseViewController.buttonTap3(_:)), for: UIControlEvents.touchUpInside)
        return bt1
    }()
    var btn4: PowerButton = {
        let bt4 = PowerButton(type: UIButtonType.roundedRect)
        bt4.backgroundColor = UIColor.lightGray
        bt4.setTitle(" ", for: UIControlState())
        bt4.setTitleColor(UIColor.white, for: UIControlState())
        bt4.titleLabel?.font = UIFont(name: "Arial", size: 23)
        bt4.addTarget(self, action: #selector(selectcityViewController.buttonTap2(_:)), for: UIControlEvents.touchUpInside)
        bt4.layer.masksToBounds = true
        bt4.layer.cornerRadius = 16
        bt4.layer.borderWidth = 2
        bt4.layer.borderColor = UIColor.lightText.cgColor
        bt4.frame = CGRect (x: 40.fitScreen, y: 400.fitHeight, width: 340.fitScreen, height: 45.fitHeight)
        bt4.alpha = 0.1
        return bt4
    }()
    var btn5: SmallButton = {
        let bt1 = SmallButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 40.fitScreen, y: 470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "热水"), for: UIControlState())
        bt1.setTitle("", for: UIControlState())
        bt1.titleLabel?.font = UIFont(name: "#404040", size: 1)
        return bt1
    }()
    var btn6: SmallButton = {
        let bt1 = SmallButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 140.fitScreen, y: 470.fitHeight, width: 40.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "电视"), for: UIControlState())
        bt1.setTitle("", for: UIControlState())
        return bt1
    }()
    var btn7: SmallButton = {
        let bt1 = SmallButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 240.fitScreen, y: 470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "冰箱"), for: UIControlState())
        return bt1
    }()
    var btn8: SmallButton = {
        let bt1 = SmallButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 340.fitScreen, y: 470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "空调"), for: UIControlState())
        return bt1
    }()
    var btn9: SmallButton = {
        let bt1 = SmallButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 40.fitScreen, y: 560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "被单更换"), for: UIControlState())
        return bt1
    }()
    var btn10: SmallButton = {
        let bt1 = SmallButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 140.fitScreen, y: 560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "可以做饭"), for: UIControlState())
        return bt1
    }()
    var btn11: SmallButton = {
        let bt1 = SmallButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 240.fitScreen, y: 560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "可以吸烟"), for: UIControlState())
        return bt1
    }()
    var imgView: UIImageView = {
        let view = UIImageView(image: UIImage(named: "1"))
        view.frame = CGRect(x: 0.fitScreen, y: 20.fitHeight, width: 414.fitScreen, height: 200.fitHeight)
        return view
    }()
    var llabel: PowerLabel = {
        let frame1 = CGRect (x: 0.fitScreen, y: 220.fitHeight, width: 200.fitScreen, height: 40.fitHeight)
        let label = PowerLabel(frame: frame1)
        label.text = "聚龙水世界"
        label.alpha = 0.8
        label.font = UIFont (name: "Arial", size: 22)
        label.textColor = UIColor.black
        return label
    }()
    var llabel1: PowerLabel = {
        let frame1 = CGRect (x: 5.fitScreen, y: 405.fitHeight, width: 400.fitScreen, height: 40.fitHeight)
        let label = PowerLabel(frame: frame1)
        label.text = "简欧风格   1卧室1卫1厨  34.8平方"
        label.font = UIFont (name: "Arial", size: 12)
        label.textColor = UIColor.black
        return label
    }()
    var llabel3: PowerLabel = {
        let frame1 = CGRect (x: -55.fitScreen, y: 250.fitHeight, width: 400.fitScreen, height: 40.fitHeight)
        let label3 = PowerLabel (frame: frame1)
        label3.text = "套间   单间  独特别墅 距您3.6公里"
        label3.alpha = 0.7
        label3.font = UIFont (name: "Arial", size: 12)
        label3.textColor = UIColor.black
        return label3
    }()
    var llabel5: PowerLabel = {
        let frame1 = CGRect (x: -40.fitScreen, y: 285.fitHeight, width: 400.fitScreen, height: 40.fitHeight)
        let label3 = PowerLabel (frame: frame1)
        label3.text = "1182人收藏"
        label3.alpha = 0.7
        label3.font = UIFont (name: "Arial", size: 12)
        label3.textColor = UIColor.black
        return label3
    }()
    var llabel8: PowerLabel = {
        let frame1 = CGRect (x: -70.fitScreen, y: 285.fitHeight, width: 200.fitScreen, height: 40.fitHeight)
        let label3 = PowerLabel (frame: frame1)
        label3.text = "¥"
        label3.alpha = 0.7
        label3.textColor = UIColor.red
        label3.font = UIFont (name: "Arial", size: 12)
        return label3
    }()
    var llabel9: PowerLabel = {
        let frame1 = CGRect (x: -50.fitScreen, y: 280.fitHeight, width: 200.fitScreen, height: 40.fitHeight)
        let label3 = PowerLabel (frame: frame1)
        label3.text = "   128"
        label3.alpha = 0.7
        label3.textColor = UIColor.red
        label3.font = UIFont (name: "Arial", size: 25)
        return label3
    }()
    var slabel: SmallLabel = {
        let bt1 = SmallLabel()
        bt1.frame = CGRect(x: 10.fitScreen, y: 510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
        bt1.text = "24小时热水"
        return bt1
    }()
    var slabel1: SmallLabel = {
        let bt1 = SmallLabel()
        bt1.frame = CGRect(x: 110.fitScreen, y: 510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
        bt1.text = "电视"
        return bt1
    }()
    var slabel2: SmallLabel = {
        let bt1 = SmallLabel()
        bt1.frame = CGRect(x: 205.fitScreen, y: 510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
        bt1.text = "冰箱"
        return bt1
    }()
    var slabel3: SmallLabel = {
        let bt1 = SmallLabel()
        bt1.frame = CGRect(x: 305.fitScreen, y: 510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
        bt1.text = "空调"
        return bt1
    }()
    var slabel4: SmallLabel = {
        let bt1 = SmallLabel()
        bt1.frame = CGRect(x: 5.fitScreen, y: 600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
        bt1.text = "被单更换"
        return bt1
    }()
    var slabel5: SmallLabel = {
        let bt1 = SmallLabel()
        bt1.frame = CGRect(x: 105.fitScreen, y: 600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
        bt1.text = "可以做饭"
        return bt1
    }()
    var slabel6: SmallLabel = {
        let bt1 = SmallLabel()
        bt1.frame = CGRect(x: 205.fitScreen, y: 600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
        bt1.text = "可以吸烟"
        return bt1
    }()
    var slabels: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 5.fitScreen, y:1000.fitHeight, width: 414.fitScreen, height: 35.fitHeight)
        bt1.text = "_______________________________________"
        return bt1
    }()
    var slabels2: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 5.fitScreen, y:1630.fitHeight, width: 414.fitScreen, height: 35.fitHeight)
        bt1.text = "_______________________________________"
        return bt1
    }()
    var slabelx: PowerLabel = {
        let bt1 = PowerLabel()
        bt1.frame = CGRect(x: 5.fitScreen, y: 1040.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
        bt1.text = "入住须知"
        bt1.textColor = UIColor.lightGray
        return bt1
    }()
    var slabelX: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 0.fitScreen, y: 1100.fitHeight, width: 414.fitScreen, height: 737.fitHeight)
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.text = "●   Xbed全程自助，不设前台，入住流程：打开微信Xbed/APP办理入住-【我的订单】，按提示操作即可获得开门密码哟~\n\n●  入住当天14：00后即可在【我的订单】办理入住手续，请耐心等待房间清洁完成后再进行办理入住；\n\n●   房门密码于进房当日12：00失效，特别情况请致电客服电话18021273533\n\n●   退房离店时，只需在微信Xbed/App【我的订单】点击【办理退房】即可；\n\n●   预订后请确认所有入住人在微信Xbed/App-办理入住-个人中心-发票，按提示填入开票信息即可；\n\n●   目前仅支持接待中国二代身份证的客人；\n\n●   预订后请确认所有入住人在微信Xbed/App完成身份验证，管家会统一查实哦~\n\n●   如需打扫房间，请在【我的订单】里面点击【清洁申请】按钮。将会有清洁管家为您安排打扫；\n\n●   微信Xbed/App点击半流退房之前，请检查您所携带的行李物品是否带齐，以免发生遗漏；\n\n●   入住当天12：00前取消订单，房费全部退还，逾时取消，房费将不予退还。\n\n"
        bt1.alpha = 0.5
        return bt1
    }()
    var slabelxx: PowerLabel = {
        let bt1 = PowerLabel()
        bt1.frame = CGRect(x: 5.fitScreen, y: 1680.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
        bt1.text = "退款政策"
        bt1.textColor = UIColor.black
        return bt1
    }()
    var slabelx1: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 60.fitScreen, y: 100.fitHeight, width: 414.fitScreen, height: 35.fitHeight)
        bt1.text = "如取消订单，\n全额退款"
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.textColor = UIColor.black
        return bt1
    }()
    var slabelx2: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 240.fitScreen, y: 100.fitHeight, width: 414.fitScreen, height: 35.fitHeight)
        bt1.text = "如取消订单，\n退还房费的50%"
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.textColor = UIColor.red
        return bt1
    }()
    var slabelx3: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: -152.fitScreen, y: 236.fitHeight, width: 414.fitScreen, height: 50.fitHeight)
        bt1.text = "预订成功"
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textColor = UIColor.black
        return bt1
    }()
    var slabelx4: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 30.fitScreen, y: 236.fitHeight, width: 414.fitScreen, height: 50.fitHeight)
        bt1.text = "入住日前1天\n12:00"
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .center
        bt1.textColor = UIColor.black
        return bt1
    }()
    var slabels3: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 60.fitScreen, y: 200.fitHeight, width: 414 * 2 .fitScreen, height: 35.fitHeight)
        bt1.text = "-----------------------------"
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        return bt1
    }()
    var slabels4: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 240.fitScreen, y: 200.fitHeight, width: 414 * 2.fitScreen, height: 35.fitHeight)
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.text = "-----------------------------"
        bt1.textColor =  UIColor.red
        return bt1
    }()
    var btn12: SmallButton = {
        let bt1 = SmallButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 30.fitScreen, y: 186.fitHeight, width: 50.fitScreen, height: 50.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "时间"), for: UIControlState())
        return bt1
    }()
    var btn13: SmallButton = {
        let bt1 = SmallButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 210.fitScreen, y: 186.fitHeight, width: 50.fitScreen, height: 50.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "时间"), for: UIControlState())
        return bt1
    }()
    var slabels5: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 0.fitScreen, y:1976.fitHeight, width: 414.fitScreen, height: 35.fitHeight)
        bt1.text = "_______________________________________"
        return bt1
    }()
    var slabelxx2: PowerLabel = {
        let bt1 = PowerLabel()
        bt1.frame = CGRect(x: 5.fitScreen, y: 2040.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
        bt1.text = "附近房源"
        bt1.textColor = UIColor.lightGray
        return bt1
    }()
    var segmentedcontrol: TwicketSegmentedControl = {
    let titles = ["房间介绍", "位置指引", "住客评价"]
    let frame = CGRect(x: 5.fitScreen, y: 340.fitHeight, width: 404.fitScreen, height: 40.fitHeight)
    let segmentedControl = TwicketSegmentedControl(frame: frame)
    segmentedControl.setSegmentItems(titles)
    segmentedControl.defaultTextColor = .gray
    segmentedControl.highlightTextColor = .white
    segmentedControl.sliderBackgroundColor = .orange
    segmentedControl.move(to: 0)
    return segmentedControl
    }()
    var sscroll: UIScrollView = {
        let scroll = UIScrollView()
        scroll.frame = CGRect(x: 0.fitScreen, y: 0.fitHeight, width: 414.fitScreen, height: 737.fitHeight)
        scroll.contentSize = CGSize(width: 414.fitScreen, height: 2511.fitHeight)
        return scroll
    }()
    var sscroll2: UIScrollView = {
        let scroll = UIScrollView()
        scroll.frame = CGRect(x: 0.fitScreen, y: 1700.fitHeight, width: 414.fitScreen, height: 300.fitHeight)
        scroll.contentSize = CGSize(width: 828.fitScreen, height: 300.fitHeight)
        return scroll
    }()
    var sscroll3: UIScrollView = {
        let scroll = UIScrollView()
        scroll.frame = CGRect(x: 0.fitScreen, y: 2080.fitHeight, width: 414.fitScreen, height: 300.fitHeight)
        scroll.contentSize = CGSize(width: 1656.fitScreen, height: 300.fitHeight)
        return scroll
    }()
    var btn14: PowerButton = {
        let bt4 = PowerButton(type: UIButtonType.roundedRect)
        bt4.layer.masksToBounds = true
        bt4.layer.cornerRadius = 16
        bt4.layer.borderWidth = 2
        bt4.layer.borderColor = UIColor.lightText.cgColor
        bt4.setBackgroundImage(UIImage(named: "base1"), for: UIControlState())
        bt4.frame = CGRect (x: 30.fitScreen, y: 30.fitHeight, width: 400.fitScreen, height: 200.fitHeight)
        return bt4
    }()
    var btn15: PowerButton = {
        let bt4 = PowerButton(type: UIButtonType.roundedRect)
        bt4.layer.masksToBounds = true
        bt4.layer.cornerRadius = 16
        bt4.layer.borderWidth = 2
        bt4.layer.borderColor = UIColor.lightText.cgColor
        bt4.setBackgroundImage(UIImage(named: "base2"), for: UIControlState())
        bt4.frame = CGRect (x: 460.fitScreen, y: 30.fitHeight, width: 400.fitScreen, height: 200.fitHeight)
        return bt4
    }()
    var btn16: PowerButton = {
        let bt4 = PowerButton(type: UIButtonType.roundedRect)
        bt4.layer.masksToBounds = true
        bt4.layer.cornerRadius = 16
        bt4.layer.borderWidth = 2
        bt4.layer.borderColor = UIColor.lightText.cgColor
        bt4.setBackgroundImage(UIImage(named: "base3"), for: UIControlState())
        bt4.frame = CGRect (x: 890.fitScreen, y: 30.fitHeight, width: 400.fitScreen, height: 200.fitHeight)
        return bt4
    }()
    var basename: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect (x: 30.fitScreen, y: 250.fitHeight, width: 400.fitScreen, height: 40.fitHeight)
        bt1.text = "象屿两岸1320"
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.textColor = UIColor.black
        return bt1
    }()
    var basename2: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect (x: 460.fitScreen, y: 250.fitHeight, width: 400.fitScreen, height: 40.fitHeight)
        bt1.text = "象屿两岸贸易中心1217"
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.textColor = UIColor.black
        return bt1
    }()
    var basename3: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect (x: 890.fitScreen, y: 250.fitHeight, width: 400.fitScreen, height: 40.fitHeight)
        bt1.text = "象屿两岸体育中心4869"
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.textColor = UIColor.black
        return bt1
    }()
    var btn17: PowerButton = {
        let bt1 = PowerButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect (x: 400.fitScreen, y: 45.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "收藏2"), for: UIControlState())
        bt1.setTitle(" ", for: UIControlState())
        bt1.setTitleColor(UIColor.white, for: UIControlState())
        bt1.addTarget(self, action: #selector(baseViewController.buttonTap4(_:)), for: UIControlEvents.touchUpInside)
        bt1.alpha = 1
        return bt1
    }()
    var btn18: PowerButton = {
        let bt1 = PowerButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect (x: 830.fitScreen, y: 45.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "收藏2"), for: UIControlState())
        bt1.setTitle(" ", for: UIControlState())
        bt1.setTitleColor(UIColor.white, for: UIControlState())
        bt1.addTarget(self, action: #selector(baseViewController.buttonTap5(_:)), for: UIControlEvents.touchUpInside)
        bt1.alpha = 1
        return bt1
    }()
    var btn19: PowerButton = {
        let bt1 = PowerButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect (x: 1260.fitScreen, y: 45.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "收藏2"), for: UIControlState())
        bt1.setTitle(" ", for: UIControlState())
        bt1.setTitleColor(UIColor.white, for: UIControlState())
        bt1.addTarget(self, action: #selector(baseViewController.buttonTap6(_:)), for: UIControlEvents.touchUpInside)
        bt1.alpha = 1
        return bt1
    }()
    var baseprice: PatientInfoCustomLabel = {
        let frame1 = CGRect (x: 300.fitScreen, y: 185.fitHeight, width: 200.fitScreen, height: 35.fitHeight)
        let label3 = PatientInfoCustomLabel (frame: frame1)
        label3.text = "￥128起/晚"
        label3.alpha = 1
        label3.lineBreakMode = NSLineBreakMode.byWordWrapping
        label3.numberOfLines = 0
        label3.textAlignment = .left
        label3.textColor = UIColor.lightText
        label3.font = UIFont (name: "Arial", size: 20)
        return label3
    }()
    var baseprice2: PatientInfoCustomLabel = {
        let frame1 = CGRect (x: 730.fitScreen, y: 185.fitHeight, width: 200.fitScreen, height: 35.fitHeight)
        let label3 = PatientInfoCustomLabel (frame: frame1)
        label3.text = "￥178起/晚"
        label3.alpha = 1
        label3.lineBreakMode = NSLineBreakMode.byWordWrapping
        label3.numberOfLines = 0
        label3.textAlignment = .left
        label3.textColor = UIColor.lightText
        label3.font = UIFont (name: "Arial", size: 20)
        return label3
    }()
    var baseprice3: PatientInfoCustomLabel = {
        let frame1 = CGRect (x: 1160.fitScreen, y: 185.fitHeight, width: 200.fitScreen, height: 35.fitHeight)
        let label3 = PatientInfoCustomLabel (frame: frame1)
        label3.text = "￥228起/晚"
        label3.alpha = 1
        label3.lineBreakMode = NSLineBreakMode.byWordWrapping
        label3.numberOfLines = 0
        label3.textAlignment = .left
        label3.textColor = UIColor.lightText
        label3.font = UIFont (name: "Arial", size: 20)
        return label3
    }()
    var call: SmallButton = {
        let bt1 = SmallButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 40.fitScreen, y: 2440.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "电话"), for: UIControlState())
        return bt1
    }()
    var callprompt: SmallButton = {
        let bt1 = SmallButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 0.fitScreen, y: 2320.fitHeight, width: 210.fitScreen, height: 150.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "对话框"), for: UIControlState())
        return bt1
    }()
    var reserve: PowerButton = {
        let bt4 = PowerButton(type: UIButtonType.roundedRect)
        bt4.frame = CGRect (x: 140.fitScreen, y: 2440.fitHeight, width: 260.fitScreen, height: 45.fitHeight)
        bt4.backgroundColor = UIColor.green
        bt4.setTitle("立即预订", for: UIControlState())
        bt4.setTitleColor(UIColor.white, for: UIControlState())
        bt4.titleLabel?.font = UIFont(name: "Arial", size: 23)
        bt4.layer.masksToBounds = true
        bt4.layer.cornerRadius = 16
        bt4.layer.borderWidth = 2
        bt4.setBackgroundImage(UIImage(named: ""), for: UIControlState())
        bt4.layer.borderColor = UIColor.lightText.cgColor
        bt4.alpha = 1
        return bt4
    }()
    var slabelx6: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 20.fitScreen, y: 2365.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
        bt1.text = "免费通话哦！"
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.textColor = UIColor.white
        bt1.font = UIFont (name: "Arial", size: 18)
        return bt1
    }()
    var slabelx7: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 20.fitScreen, y: 2400.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
        bt1.text = "和社区聊聊你的住宿计划"
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.textColor = UIColor.white
        bt1.font = UIFont (name: "Arial", size: 12)
        return bt1
    }()
    var btn20: PowerButton = {
        let bt1 = PowerButton(type: UIButtonType.roundedRect)
        bt1.frame = CGRect(x: 170.fitScreen, y: 2368.fitHeight, width: 20.fitScreen, height: 20.fitHeight)
        bt1.setBackgroundImage(UIImage(named: "叉"), for: UIControlState())
        bt1.setTitle(" ", for: UIControlState())
        bt1.setTitleColor(UIColor.black, for: UIControlState())
        bt1.addTarget(self, action: #selector(baseViewController.buttonTap7(_:)), for: UIControlEvents.touchUpInside)
        return bt1
    }()
    var btn21: PowerButton = {
        let bt4 = PowerButton(type: UIButtonType.roundedRect)
        bt4.frame = CGRect (x: 5.fitScreen, y: 405.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
        bt4.backgroundColor = UIColor.white
        bt4.setTitle("地图导航", for: UIControlState())
        bt4.setTitleColor(UIColor.black, for: UIControlState())
        bt4.titleLabel?.font = UIFont(name: "Arial", size: 18)
        bt4.layer.masksToBounds = true
        bt4.layer.cornerRadius = 16
        bt4.layer.borderWidth = 2
        bt4.setBackgroundImage(UIImage(named: ""), for: UIControlState())
        bt4.layer.borderColor = UIColor.lightGray.cgColor
        bt4.addTarget(self, action: #selector(baseViewController.buttonTap9(_:)), for: UIControlEvents.touchUpInside)
        bt4.alpha = 0.6
        return bt4
    }()
    var btn22: PowerButton = {
        let bt4 = PowerButton(type: UIButtonType.roundedRect)
        bt4.frame = CGRect (x: 210.fitScreen, y: 405.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
        bt4.backgroundColor = UIColor.white
        bt4.setTitle("寻路指南", for: UIControlState())
        bt4.setTitleColor(UIColor.black, for: UIControlState())
        bt4.titleLabel?.font = UIFont(name: "Arial", size: 18)
        bt4.layer.masksToBounds = true
        bt4.layer.cornerRadius = 16
        bt4.layer.borderWidth = 2
        bt4.setBackgroundImage(UIImage(named: ""), for: UIControlState())
        bt4.layer.borderColor = UIColor.lightGray.cgColor
        bt4.addTarget(self, action: #selector(baseViewController.buttonTap8(_:)), for: UIControlEvents.touchUpInside)
        bt4.alpha = 0.6
        return bt4
    }()
    var score: PowerLabel = {
        let frame1 = CGRect (x: 10.fitScreen, y: 60.fitHeight, width: 150.fitScreen, height: 40.fitHeight)
        let label3 = PowerLabel (frame: frame1)
        label3.text = "4.9"
        label3.alpha = 0.7
        label3.textColor = UIColor.orange
        label3.font = UIFont (name: "Arial", size: 40)
        return label3
    }()
    var evaluate: PowerLabel = {
        let frame1 = CGRect (x: 10.fitScreen, y: 120.fitHeight, width: 150.fitScreen, height: 40.fitHeight)
        let label3 = PowerLabel (frame: frame1)
        label3.text = "110条评价"
        label3.alpha = 0.7
        label3.textColor = UIColor.lightGray
        label3.font = UIFont (name: "Arial", size: 15)
        return label3
    }()
    var evaluate1: PowerLabel = {
        let frame1 = CGRect (x: 135.fitScreen, y: 40.fitHeight, width: 160.fitScreen, height: 40.fitHeight)
        let label3 = PowerLabel (frame: frame1)
        label3.text = "设施评分"
        label3.alpha = 0.7
        label3.textColor = UIColor.lightGray
        label3.font = UIFont (name: "Arial", size: 15)
        return label3
    }()
    var evaluate2: PowerLabel = {
        let frame1 = CGRect (x: 135.fitScreen, y: 80.fitHeight, width: 160.fitScreen, height: 40.fitHeight)
        let label3 = PowerLabel (frame: frame1)
        label3.text = "卫生评分"
        label3.alpha = 0.7
        label3.textColor = UIColor.lightGray
        label3.font = UIFont (name: "Arial", size: 15)
        return label3
    }()
    var evaluate3: PowerLabel = {
        let frame1 = CGRect (x: 135.fitScreen, y: 120.fitHeight, width: 160.fitScreen, height: 40.fitHeight)
        let label3 = PowerLabel (frame: frame1)
        label3.text = "安全感"
        label3.alpha = 0.7
        label3.textColor = UIColor.lightGray
        label3.font = UIFont (name: "Arial", size: 15)
        return label3
    }()
    var evaluate4: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 146.fitScreen, y: 35.fitHeight, width: 414.fitScreen, height: 737.fitHeight)
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.text = "|\n|\n|\n|\n|\n|\n|\n"
        bt1.textColor = UIColor.lightGray
        bt1.alpha = 1
        return bt1
    }()
    var evaluate5: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 146.fitScreen, y: 40.fitHeight, width: 414.fitScreen, height: 737.fitHeight)
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.text = "|\n|\n|\n|\n|\n|\n|\n"
        bt1.textColor = UIColor.lightGray
        bt1.alpha = 1
        return bt1
    }()
    var evaluate6: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect (x: 270.fitScreen, y: 52.fitHeight, width: 160.fitScreen, height: 40.fitHeight)
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.text = "★ ★ ★ ★ ★ 4.9"
        bt1.textColor = UIColor.orange
        bt1.font = UIFont (name: "Arial", size: 10)
        bt1.alpha = 1
        return bt1
    }()
    var evaluate7: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect (x: 270.fitScreen, y: 92.fitHeight, width: 160.fitScreen, height: 40.fitHeight)
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.text = "★ ★ ★ ★ ★ 4.9"
        bt1.textColor = UIColor.orange
        bt1.font = UIFont (name: "Arial", size: 10)
        bt1.alpha = 1
        return bt1
    }()
    var evaluate8: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect (x: 270.fitScreen, y: 132.fitHeight, width: 160.fitScreen, height: 40.fitHeight)
        bt1.lineBreakMode = NSLineBreakMode.byWordWrapping
        bt1.numberOfLines = 0
        bt1.textAlignment = .left
        bt1.text = "★ ★ ★ ★ ★ 4.9"
        bt1.textColor = UIColor.orange
        bt1.font = UIFont (name: "Arial", size: 10)
        bt1.alpha = 1
        return bt1
    }()
    var sscroll4: UIScrollView = {
        let scroll = UIScrollView()
        scroll.frame = CGRect(x: 0.fitScreen, y: 380.fitHeight, width: 414.fitScreen, height: 737.fitHeight)
        scroll.contentSize = CGSize(width: 414.fitScreen, height: 1474.fitHeight)
        return scroll
    }()
    var line: PatientInfoCustomLabel = {
        let bt1 = PatientInfoCustomLabel()
        bt1.frame = CGRect(x: 0.fitScreen, y: 200.fitHeight, width: 414.fitScreen, height: 35.fitHeight)
        bt1.text = "_______________________________________"
        return bt1
    }()
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        self.view.addSubview(btn)
        self.view.addSubview(sscroll)
        self.view.addSubview(btn)
        self.view.addSubview(btn2)
        self.view.addSubview(btn3)
        sscroll.addSubview(btn4)
        sscroll.addSubview(btn5)
        sscroll.addSubview(btn6)
        sscroll.addSubview(btn7)
        sscroll.addSubview(btn8)
        sscroll.addSubview(btn9)
        sscroll.addSubview(btn10)
        sscroll.addSubview(btn11)
        sscroll.addSubview(llabel1)
        sscroll.addSubview(imgView)
        sscroll.addSubview(llabel)
        sscroll.addSubview(llabel3)
        sscroll.addSubview(llabel5)
        sscroll.addSubview(llabel8)
        sscroll.addSubview(llabel9)
        sscroll.addSubview(slabel)
        sscroll.addSubview(slabel1)
        sscroll.addSubview(slabel2)
        sscroll.addSubview(slabel3)
        sscroll.addSubview(slabel4)
        sscroll.addSubview(slabel5)
        sscroll.addSubview(slabel6)
        sscroll.addSubview(slabels)
        sscroll.addSubview(slabels2)
        sscroll.addSubview(slabelx)
        sscroll.addSubview(slabelX)
        sscroll.addSubview(slabelxx)
        sscroll.addSubview(sscroll2)
        sscroll2.addSubview(slabelx1)
        sscroll2.addSubview(slabelx2)
        sscroll2.addSubview(slabels3)
        sscroll2.addSubview(slabels4)
        sscroll.addSubview(slabels5)
        sscroll2.addSubview(btn12)
        sscroll2.addSubview(btn13)
        sscroll2.addSubview(slabelx3)
        sscroll2.addSubview(slabelx4)
        sscroll.addSubview(slabelxx2)
        sscroll.addSubview(sscroll3)
        sscroll3.addSubview(btn14)
        sscroll3.addSubview(btn15)
        sscroll3.addSubview(btn16)
        sscroll3.addSubview(btn17)
        sscroll3.addSubview(btn18)
        sscroll3.addSubview(btn19)
        sscroll3.addSubview(basename)
        sscroll3.addSubview(basename2)
        sscroll3.addSubview(basename3)
        sscroll3.addSubview(baseprice)
        sscroll3.addSubview(baseprice2)
        sscroll3.addSubview(baseprice3)
        sscroll.addSubview(call)
        sscroll.addSubview(reserve)
        sscroll.addSubview(callprompt)
        sscroll.addSubview(slabelx6)
        sscroll.addSubview(slabelx7)
        sscroll.addSubview(btn20)
        segmentedcontrol.delegate = self
        sscroll.addSubview(segmentedcontrol)
    }
    @objc func buttonTap(_ button: UIButton)
    {
        self.dismiss(animated:true,completion: nil)
    }
    @objc func buttonTap2(_ button: UIButton)
    {
        btn1.frame = self.btn2.frame
        self.view.addSubview(btn1)
    }
    @objc func buttonTap3(_ button: UIButton)
    {
        let textToShare = "聚龙水世界"
        let imageToShare = UIImage(named: "1")
        let urlToShare = URL(string: "http://www.baidu.com")
        let activityItems = [textToShare, imageToShare, urlToShare] as [Any]
        let activityVC = UIActivityViewController(activityItems: activityItems, applicationActivities: nil)
        //不出现在活动项目
        activityVC.excludedActivityTypes = [.print, .copyToPasteboard, .assignToContact, .saveToCameraRoll]
        present(activityVC, animated: true)
        // 分享之后的回调
        activityVC.completionWithItemsHandler = { activityType, completed, returnedItems, activityError in
            if completed {
                print("completed")
            } else {
                print("cancled")
            }
        }
    }
    @objc func buttonTap4(_ button: UIButton)
    {
        let bt = btn1
        bt.frame = self.btn17.frame
        sscroll3.addSubview(bt)
    }
    @objc func buttonTap5(_ button: UIButton)
    {
        let bt = btn1
        bt.frame = self.btn18.frame
        sscroll3.addSubview(bt)
    }
    @objc func buttonTap6(_ button: UIButton)
    {
        let bt = btn1
        bt.frame = self.btn19.frame
        sscroll3.addSubview(bt)
    }
    @objc func buttonTap7(_ button: UIButton)
    {
        callprompt.frame = CGRect(x: 0.fitScreen, y: -2320.fitHeight, width: 210.fitScreen, height: 150.fitHeight)
        slabelx6.frame = CGRect(x: 20.fitScreen, y: -2365.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
        slabelx7.frame = CGRect(x: 20.fitScreen, y: -2400.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
        btn20.frame = CGRect(x: 180.fitScreen, y: -2370.fitHeight, width: 15.fitScreen, height: 15.fitHeight)
    }
    @objc func buttonTap8(_ button: UIButton)
    {
        self.present(roadguideViewController(), animated: true, completion: nil)
    }
    @objc func buttonTap9(_ button: UIButton) {
        let aalert1: UIAlertController = {
            let alert = UIAlertController(title: "本宝为您提供高德与百度地图导航服务", message: "开始您的导航吧", preferredStyle: UIAlertControllerStyle.actionSheet)
            let gaode: UIAlertAction = {
                let queren = UIAlertAction(title: "使用高德地图", style: UIAlertActionStyle.default, handler: {(_: UIAlertAction) -> Void in print ("使用高德地图")
                    UIApplication.shared.open(Applications.AppleMaps(), action: .open)
                })
                return queren
            }()
            let baidu = UIAlertAction(title: "使用百度地图", style: UIAlertActionStyle.default, handler: {(_: UIAlertAction) -> Void in print ("使用百度地图")})
            let cancel = UIAlertAction(title: "取消", style: UIAlertActionStyle.cancel, handler: {(_: UIAlertAction) -> Void in print("取消")})
            alert.addAction(gaode)
            alert.addAction(baidu)
            alert.addAction(cancel)
            return alert
        }()
        self.present(aalert1, animated: true, completion: nil)
    }
    func didSelect(_ segmentIndex: Int)
    {
        if segmentIndex == 0
        {
            sscroll.contentSize = CGSize(width: 414.fitScreen, height: 2511.fitHeight)
            btn4.frame = CGRect (x: 40.fitScreen, y: 400.fitHeight, width: 340.fitScreen, height: 45.fitHeight)
            btn5.frame = CGRect(x: 40.fitScreen, y: 470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn6.frame = CGRect(x: 140.fitScreen, y: 470.fitHeight, width: 40.fitScreen, height: 35.fitHeight)
            btn7.frame = CGRect(x: 240.fitScreen, y: 470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn8.frame = CGRect(x: 340.fitScreen, y: 470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn9.frame = CGRect(x: 40.fitScreen, y: 560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn10.frame = CGRect(x: 140.fitScreen, y: 560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn11.frame = CGRect(x: 240.fitScreen, y: 560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            llabel1.frame = CGRect (x: 5.fitScreen, y: 405.fitHeight, width: 400.fitScreen, height: 40.fitHeight)
            slabel.frame = CGRect(x: 10.fitScreen, y: 510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel1.frame = CGRect(x: 110.fitScreen, y: 510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel2.frame = CGRect(x: 205.fitScreen, y: 510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel3.frame = CGRect(x: 305.fitScreen, y: 510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel4.frame = CGRect(x: 5.fitScreen, y: 600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel5.frame = CGRect(x: 105.fitScreen, y: 600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel6.frame = CGRect(x: 205.fitScreen, y: 600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            btn21.frame = CGRect (x: 5.fitScreen, y: -405.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            btn22.frame = CGRect (x: 210.fitScreen, y: -405.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            reserve.frame = CGRect (x: 140.fitScreen, y: 2440.fitHeight, width: 260.fitScreen, height: 45.fitHeight)
            sscroll4.frame = CGRect(x: -9999.fitScreen, y: 380.fitHeight, width: 414.fitScreen, height: 737.fitHeight)
            callprompt.frame = CGRect(x: 0.fitScreen, y: 2320.fitHeight, width: 210.fitScreen, height: 150.fitHeight)
            slabelx6.frame = CGRect(x: 20.fitScreen, y: 2365.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            slabelx7.frame = CGRect(x: 20.fitScreen, y: 2400.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            btn20.frame = CGRect(x: 170.fitScreen, y: 2368.fitHeight, width: 20.fitScreen, height: 20.fitHeight)
            call.frame = CGRect(x: 40.fitScreen, y: 2440.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            sscroll.addSubview(btn4)
            sscroll.addSubview(btn5)
            sscroll.addSubview(btn6)
            sscroll.addSubview(btn7)
            sscroll.addSubview(btn8)
            sscroll.addSubview(btn9)
            sscroll.addSubview(btn10)
            sscroll.addSubview(btn11)
            sscroll.addSubview(llabel1)
            sscroll.addSubview(slabel)
            sscroll.addSubview(slabel1)
            sscroll.addSubview(slabel2)
            sscroll.addSubview(slabel3)
            sscroll.addSubview(slabel4)
            sscroll.addSubview(slabel5)
            sscroll.addSubview(slabel6)
            sscroll.addSubview(reserve)
        }
        else if segmentIndex == 1
        {
            btn4.frame = CGRect (x: 40.fitScreen, y: -400.fitHeight, width: 340.fitScreen, height: 45.fitHeight)
            btn5.frame = CGRect(x: 40.fitScreen, y: -470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn6.frame = CGRect(x: 140.fitScreen, y: -470.fitHeight, width: 40.fitScreen, height: 35.fitHeight)
            btn7.frame = CGRect(x: 340.fitScreen, y: -470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn8.frame = CGRect(x: 340.fitScreen, y: -470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn9.frame = CGRect(x: 40.fitScreen, y: -560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn10.frame = CGRect(x: 140.fitScreen, y: -560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn11.frame = CGRect(x: 240.fitScreen, y: -560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            llabel1.frame = CGRect (x: 5.fitScreen, y: -405.fitHeight, width: 400.fitScreen, height: 40.fitHeight)
            slabel.frame = CGRect(x: 10.fitScreen, y: -510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel1.frame = CGRect(x: 110.fitScreen, y: -510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel2.frame = CGRect(x: 205.fitScreen, y: -510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel3.frame = CGRect(x: 305.fitScreen, y: -510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel4.frame = CGRect(x: 5.fitScreen, y: -600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel5.frame = CGRect(x: 105.fitScreen, y: -600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel6.frame = CGRect(x: 205.fitScreen, y: -600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            sscroll.contentSize = CGSize(width: 414.fitScreen, height: 737.fitHeight)
            btn21.frame = CGRect (x: 5.fitScreen, y: 405.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            btn22.frame = CGRect (x: 210.fitScreen, y: 405.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            reserve.frame = CGRect (x: 140.fitScreen, y: 666.fitHeight, width: 260.fitScreen, height: 45.fitHeight)
            sscroll4.frame = CGRect(x: -9999.fitScreen, y: 380.fitHeight, width: 414.fitScreen, height: 737.fitHeight)
            callprompt.frame = CGRect(x: 0.fitScreen, y: 566.fitHeight, width: 210.fitScreen, height: 150.fitHeight)
            slabelx6.frame = CGRect(x: 20.fitScreen, y: 611.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            slabelx7.frame = CGRect(x: 20.fitScreen, y: 646.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            btn20.frame = CGRect(x: 170.fitScreen, y: 614.fitHeight, width: 20.fitScreen, height: 20.fitHeight)
            call.frame = CGRect(x: 40.fitScreen, y: 676.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            self.view.addSubview(btn21)
            self.view.addSubview(btn22)
            self.view.addSubview(reserve)
        }
        else if segmentIndex == 2
        {
            btn4.frame = CGRect (x: 40.fitScreen, y: -400.fitHeight, width: 340.fitScreen, height: 45.fitHeight)
            btn5.frame = CGRect(x: 40.fitScreen, y: -470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn6.frame = CGRect(x: 140.fitScreen, y: -470.fitHeight, width: 40.fitScreen, height: 35.fitHeight)
            btn7.frame = CGRect(x: 340.fitScreen, y: -470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn8.frame = CGRect(x: 340.fitScreen, y: -470.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn9.frame = CGRect(x: 40.fitScreen, y: -560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn10.frame = CGRect(x: 140.fitScreen, y: -560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            btn11.frame = CGRect(x: 240.fitScreen, y: -560.fitHeight, width: 30.fitScreen, height: 35.fitHeight)
            llabel1.frame = CGRect (x: 5.fitScreen, y: -405.fitHeight, width: 400.fitScreen, height: 40.fitHeight)
            slabel.frame = CGRect(x: 10.fitScreen, y: -510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel1.frame = CGRect(x: 110.fitScreen, y: -510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel2.frame = CGRect(x: 205.fitScreen, y: -510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel3.frame = CGRect(x: 305.fitScreen, y: -510.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel4.frame = CGRect(x: 5.fitScreen, y: -600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel5.frame = CGRect(x: 105.fitScreen, y: -600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            slabel6.frame = CGRect(x: 205.fitScreen, y: -600.fitHeight, width: 100.fitScreen, height: 35.fitHeight)
            sscroll.contentSize = CGSize(width: 414.fitScreen, height: 737.fitHeight)
            btn21.frame = CGRect (x: 5.fitScreen, y: -405.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            btn22.frame = CGRect (x: 210.fitScreen, y: -405.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            reserve.frame = CGRect (x: 140.fitScreen, y: 666.fitHeight, width: 260.fitScreen, height: 45.fitHeight)
            sscroll4.frame = CGRect(x: 0.fitScreen, y: 380.fitHeight, width: 414.fitScreen, height: 737.fitHeight)
            sscroll4.contentSize = CGSize(width: 414.fitScreen, height: 1474.fitHeight)
            callprompt.frame = CGRect(x: 0.fitScreen, y: 566.fitHeight, width: 210.fitScreen, height: 150.fitHeight)
            slabelx6.frame = CGRect(x: 20.fitScreen, y: 611.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            slabelx7.frame = CGRect(x: 20.fitScreen, y: 646.fitHeight, width: 200.fitScreen, height: 50.fitHeight)
            btn20.frame = CGRect(x: 170.fitScreen, y: 614.fitHeight, width: 20.fitScreen, height: 20.fitHeight)
            sscroll.addSubview(sscroll4)
            sscroll4.addSubview(score)
            sscroll4.addSubview(evaluate)
            sscroll4.addSubview(evaluate1)
            sscroll4.addSubview(evaluate2)
            sscroll4.addSubview(evaluate3)
            sscroll4.addSubview(evaluate4)
            sscroll4.addSubview(evaluate5)
            sscroll4.addSubview(evaluate6)
            sscroll4.addSubview(evaluate7)
            sscroll4.addSubview(evaluate8)
            sscroll4.addSubview(line)
            self.view.addSubview(reserve)
            self.view.addSubview(btn20)
        }
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()

    }
}
