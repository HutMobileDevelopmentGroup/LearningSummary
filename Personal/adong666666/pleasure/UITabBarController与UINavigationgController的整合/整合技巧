这两天试了一下UITabBarController和UINavigationController的整合，感觉特别麻烦


不过我又要标签栏，又要导航栏，需要想办法把它们整合到一起

我是这样考虑的，如果实在不行，就留下导航栏，标签栏就用UIButton来实现，不过好在我今天实现了，用不着再费时间新建一堆UIButton了

下面上代码



//  Created by adong666666 on 2018/8/29. Copyright © 2018年 adong666666. All rights reserved.

import UIKit

class llbTabBarController: UITabBarController {
    
    override func viewDidLoad() { allthings() }
    
}
extension llbTabBarController{
    func allthings(){
        super.viewDidLoad()
        viewcontrollers()
    }
}
extension llbTabBarController{
    func viewcontrollers(){
        let homeVc = shouyeViewController()
        let homeNc = MyNavigationController(rootViewController: homeVc)
        homeVc.tabBarItem.title = "首页"
        homeVc.tabBarItem.image = UIImage.init(named:"首页")
        homeVc.tabBarItem.selectedImage = UIImage.init(named:"首页2")
        
        let storeVc = storeViewController()
        let storeNc = MyNavigationController(rootViewController: storeVc)
        storeVc.tabBarItem.title = "商城"
        storeVc.tabBarItem.image = UIImage.init(named:"商城")
        storeVc.tabBarItem.selectedImage = UIImage.init(named:"商城2")
        
        let serviceVc = serviceViewController()
        let serviceNc = MyNavigationController(rootViewController: serviceVc)
        serviceVc.tabBarItem.title = "管家"
        serviceVc.tabBarItem.image = UIImage.init(named:"客服")
        serviceVc.tabBarItem.selectedImage = UIImage.init(named:"客服2")
        
        let orderVc = orderViewController()
        let orderNc = MyNavigationController(rootViewController: orderVc)
        orderVc.tabBarItem.title = "订单"
        orderVc.tabBarItem.image = UIImage.init(named:"订单")
        orderVc.tabBarItem.selectedImage = UIImage.init(named:"订单2")
        
        let mineVc = mineViewController()
        let mineNc = MyNavigationController(rootViewController: mineVc)
        mineVc.tabBarItem.title = "我的"
        mineVc.tabBarItem.image = UIImage.init(named:"我的")
        mineVc.tabBarItem.selectedImage = UIImage.init(named:"我的2")
        
        //self.viewControllers = [homeNc,storeNc,serviceNc,orderNc,mineNc]
        setViewControllers([homeNc,storeNc,serviceNc,orderNc,mineNc], animated: true)
        self.tabBar.tintColor = UIColor.green
        /* addChildViewController(homeNc)
         addChildViewController(storeNc)
         addChildViewController(serviceNc)
         addChildViewController(orderNc)
         addChildViewController(mineNc)*/
    }
}







        let homeVc = shouyeViewController()
        let homeNc = MyNavigationController(rootViewController: homeVc)
        homeVc.tabBarItem.title = "首页"
        homeVc.tabBarItem.image = UIImage.init(named:"首页")
        homeVc.tabBarItem.selectedImage = UIImage.init(named:"首页2")
        
        
        注意到在其他页面新建一个UIViewController, 这里我们是shouyeViewController
        
        然后我们直接新一个navigationController
        我自定义了一个MyNavigationController,继承UINavigationController,然后让shouyeViewControler()成为其根视图，即rootViewController
        再设置tabBarItem 的标题，默认图片，选中图片，
        
        依次类推，建立五个navigation,每个navigation上有一个UIViewController,最后将五个navigationController放置于一个
        llbTabBarController上，llbTabBarController是自定义的，继承UITabBarController,上面代码给出来了
        
        将navigationController加入到tabBarController中的方法有许多，我给出三种哈
        
        1.self.viewControllers = [homeNc,storeNc,serviceNc,orderNc,mineNc]
        2.setViewControllers([homeNc,storeNc,serviceNc,orderNc,mineNc], animated: true)
      
        
         3.addChildViewController(homeNc)
         addChildViewController(storeNc)
         addChildViewController(serviceNc)
         addChildViewController(orderNc)
         addChildViewController(mineNc)
        这个可以设置标签栏字体颜色
        self.tabBar.tintColor = UIColor.green
        
        
        最后将自定义的llbTabBarController放到AppDelegate中，如下：
        
        //  Created by adong666666 on 2018/7/14  Copyright © 2018年 adong666666. All rights reserved.
import UIKit


@UIApplicationMain
class AppDelegate: UIResponder, UIApplicationDelegate{
    var window: UIWindow?
}
extension AppDelegate{
    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -> Bool {
        window = UIWindow(frame: UIScreen.main.bounds)
        window?.makeKeyAndVisible()
        let tab = llbTabBarController()
        self.window?.rootViewController = tab
        return true
    }
    func applicationWillResignActive(_ application: UIApplication) {}
    func applicationDidEnterBackground(_ application: UIApplication) {}
    func applicationWillEnterForeground(_ application: UIApplication) {}
    func applicationDidBecomeActive(_ application: UIApplication) {}
    func applicationWillTerminate(_ application: UIApplication) {}
}

        
        
        
        
        
